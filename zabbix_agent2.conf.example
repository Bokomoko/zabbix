# Configura√ß√£o do Zabbix Agent2 para Hosts Externos
# ===========================================
# üè† PROJETO: Zabbix Monitoramento Rede Dom√©stica
# üêß OTIMIZADO: Linux Mint / Ubuntu / Debian com PODMAN
# üìÖ VERS√ÉO: Zabbix 7.4 LTS
# ===========================================
#
# üìã INSTRU√á√ïES R√ÅPIDAS:
# 1. Copie este arquivo para /etc/zabbix/zabbix_agent2.conf
# 2. Edite as configura√ß√µes marcadas com ‚ö†Ô∏è
# 3. Reinicie o servi√ßo: sudo systemctl restart zabbix-agent2
#
# üîí IMPORTANTE: Altere TODOS os valores marcados com ‚ö†Ô∏è

# ===========================================
# CONFIGURA√á√ïES B√ÅSICAS
# ===========================================

# Arquivo PID do processo
PidFile=/var/run/zabbix/zabbix_agent2.pid

# Arquivo de log
LogFile=/var/log/zabbix/zabbix_agent2.log

# N√≠vel de log (0=b√°sico, 1=cr√≠tico, 2=erro, 3=aviso, 4=debug, 5=debug estendido)
LogLevel=3

# Tamanho m√°ximo do arquivo de log (MB)
LogFileSize=100

# ===========================================
# CONFIGURA√á√ïES DE REDE
# ===========================================

# ‚ö†Ô∏è ALTERE: IP ou hostname do Zabbix Server
#
# PARA SERVIDOR LOCAL (mesma rede):
# Server=192.168.1.120
#
# PARA GITHUB CODESPACES (substitua pela sua URL real):
# Server=psychic-funicular-1234567890-10051.app.github.dev
#
# PARA VPS/CLOUD (substitua pelo seu dom√≠nio):
# Server=meu-servidor.exemplo.com
#
# ‚ö†Ô∏è SUBSTITUA pelo endere√ßo real do seu servidor Zabbix:
Server=192.168.1.120

# Porta do Zabbix Server (padr√£o: 10051)
ServerPort=10051

# ‚ö†Ô∏è ALTERE: Configura√ß√£o para checks ativos (recomendado para melhor performance)
#
# PARA SERVIDOR LOCAL (mesma rede):
# ServerActive=192.168.1.120:10051
#
# PARA GITHUB CODESPACES (substitua pela sua URL real):
# ServerActive=psychic-funicular-1234567890-10051.app.github.dev:10051
#
# ‚ö†Ô∏è SUBSTITUA pelo endere√ßo real do seu servidor Zabbix:
ServerActive=192.168.1.120:10051

# ‚ö†Ô∏è ALTERE: Nome √∫nico deste host no Zabbix
# IMPORTANTE: Deve ser √∫nico para cada dispositivo!
# EXEMPLOS SUGERIDOS:
# - notebook-joao-casa
# - desktop-sala-linux
# - servidor-raspberry-pi
# - workstation-escritorio
Hostname=meu-dispositivo-casa

# ===========================================
# CONFIGURA√á√ïES DE INTERFACE LOCAL
# ===========================================

# IP para escutar conex√µes (0.0.0.0 = todas as interfaces)
ListenIP=0.0.0.0

# Porta para escutar conex√µes do servidor
ListenPort=10050

# ===========================================
# CONFIGURA√á√ïES DE SEGURAN√áA
# ===========================================

# ‚ö†Ô∏è RECOMENDADO: Restringir conex√µes apenas ao servidor Zabbix
# Descomente e ajuste o IP do seu servidor:
# Server=192.168.1.120,127.0.0.1

# Timeout para conex√µes (segundos)
Timeout=30

# Permitir execu√ß√£o de comandos remotos (CUIDADO: risco de seguran√ßa!)
# S√≥ habilite se necess√°rio e confiar completamente no servidor
EnableRemoteCommands=0

# Permitir par√¢metros n√£o seguros (scripts personalizados)
# UnsafeUserParameters=1

# ===========================================
# CONFIGURA√á√ïES DE PERFORMANCE
# ===========================================

# Intervalo para verificar items ativos (segundos)
RefreshActiveChecks=120

# Buffer para envio de dados
BufferSend=5
BufferSize=100

# N√∫mero m√°ximo de linhas por segundo em logs
MaxLinesPerSecond=20

# ===========================================
# PLUGINS DO ZABBIX AGENT2 (PODMAN/DOCKER)
# ===========================================

# üêß PODMAN (Linux Mint/Ubuntu - RECOMENDADO)
# Plugin para monitoramento de containers Podman (rootless)
# Descomente a linha abaixo se este host usa Podman:
# Plugins.Docker.Endpoint=unix:///run/user/1000/podman/podman.sock

# üêß PODMAN (modo root - menos comum)
# Plugins.Docker.Endpoint=unix:///run/podman/podman.sock

# üê≥ DOCKER (alternativa)
# Plugin para monitoramento de containers Docker
# Descomente apenas se este host usa Docker em vez de Podman:
# Plugins.Docker.Endpoint=unix:///var/run/docker.sock

# Plugin para monitoramento do systemd
Plugins.Systemd.System=true

# Plugin para monitoramento de processos
Plugins.Proc.System=true

# Plugin para descoberta de interfaces de rede
Plugins.Net.Interface.Discovery=true

# ===========================================
# PAR√ÇMETROS PERSONALIZADOS √öTEIS
# ===========================================

# üå°Ô∏è Temperatura do processador (requer lm-sensors)
# sudo apt install lm-sensors && sudo sensors-detect
UserParameter=cpu.temperature,sensors 2>/dev/null | grep "Core 0" | head -1 | awk '{print $3}' | sed 's/+//;s/¬∞C//' || echo "0"

# üìä Uso de CPU detalhado
UserParameter=cpu.usage.user,grep "cpu " /proc/stat | awk '{print ($2/($2+$3+$4+$5+$6+$7+$8))*100}'
UserParameter=cpu.usage.system,grep "cpu " /proc/stat | awk '{print ($4/($2+$3+$4+$5+$6+$7+$8))*100}'

# üíæ Informa√ß√µes de mem√≥ria em MB
UserParameter=memory.available.mb,free -m | awk 'NR==2{print $7}'
UserParameter=memory.used.percent,free | awk 'NR==2{printf "%.1f", $3*100/$2}'

# üî• Temperatura da GPU NVIDIA (requer nvidia-smi)
UserParameter=gpu.nvidia.temperature,nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits 2>/dev/null || echo "0"
UserParameter=gpu.nvidia.usage,nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits 2>/dev/null || echo "0"

# üåê Velocidade da Internet (requer speedtest-cli)
# sudo apt install speedtest-cli
UserParameter=internet.speed.download,speedtest-cli --simple 2>/dev/null | grep "Download" | awk '{print $2}' || echo "0"
UserParameter=internet.speed.upload,speedtest-cli --simple 2>/dev/null | grep "Upload" | awk '{print $2}' || echo "0"
UserParameter=internet.ping,speedtest-cli --simple 2>/dev/null | grep "Ping" | awk '{print $2}' || echo "0"

# üîå Status de servi√ßos do sistema
UserParameter=service.status[*],systemctl is-active $1 2>/dev/null && echo "1" || echo "0"
UserParameter=service.enabled[*],systemctl is-enabled $1 2>/dev/null && echo "1" || echo "0"

# üíø Informa√ß√µes de disco
UserParameter=disk.free.percent[*],df -h $1 2>/dev/null | tail -1 | awk '{print $5}' | sed 's/%//' || echo "0"
UserParameter=disk.free.gb[*],df -BG $1 2>/dev/null | tail -1 | awk '{print $4}' | sed 's/G//' || echo "0"
UserParameter=disk.used.gb[*],df -BG $1 2>/dev/null | tail -1 | awk '{print $3}' | sed 's/G//' || echo "0"

# üñ•Ô∏è Informa√ß√µes do sistema
UserParameter=system.uptime.days,awk '{print int($1/86400)}' /proc/uptime
UserParameter=system.uptime.hours,awk '{print int($1/3600)}' /proc/uptime
UserParameter=system.kernel.version,uname -r
UserParameter=system.os.version,lsb_release -d 2>/dev/null | cut -f2 || cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2

# üîã Status da bateria (laptops)
UserParameter=battery.level,acpi -b 2>/dev/null | grep -oP '\d+(?=%)' | head -1 || echo "100"
UserParameter=battery.status,acpi -b 2>/dev/null | grep -oP '(Charging|Discharging|Full)' | head -1 || echo "Unknown"
UserParameter=battery.time.remaining,acpi -b 2>/dev/null | grep -oP '\d+:\d+' | head -1 || echo "00:00"

# üå°Ô∏è Temperatura de discos (requer hddtemp)
# sudo apt install hddtemp
UserParameter=disk.temperature[*],sudo hddtemp $1 2>/dev/null | awk '{print $4}' | sed 's/¬∞C//' || echo "0"

# üì° Informa√ß√µes de rede WiFi
UserParameter=wifi.signal.strength,iwconfig 2>/dev/null | grep "Signal level" | awk '{print $4}' | sed 's/level=//' | head -1 || echo "0"
UserParameter=wifi.essid,iwconfig 2>/dev/null | grep "ESSID" | awk '{print $4}' | sed 's/ESSID://;s/"//g' | head -1 || echo "unknown"

# üêß Informa√ß√µes espec√≠ficas do Podman (se instalado)
UserParameter=podman.containers.running,podman ps --format "table {{.Names}}" 2>/dev/null | wc -l || echo "0"
UserParameter=podman.containers.total,podman ps -a --format "table {{.Names}}" 2>/dev/null | wc -l || echo "0"
UserParameter=podman.images.count,podman images --format "table {{.Repository}}" 2>/dev/null | wc -l || echo "0"

# üñ•Ô∏è Informa√ß√µes de hardware
UserParameter=hardware.cpu.model,grep "model name" /proc/cpuinfo | head -1 | cut -d':' -f2 | sed 's/^ *//'
UserParameter=hardware.cpu.cores,nproc
UserParameter=hardware.memory.total.gb,free -g | awk 'NR==2{print $2}'

# ===========================================
# CONFIGURA√á√ïES PARA DIFERENTES AMBIENTES
# ===========================================

# üì° GITHUB CODESPACES
# Para conectar a um Zabbix em Codespace, descomente e ajuste:
# Server=SEU-CODESPACE-URL-10051.app.github.dev
# ServerActive=SEU-CODESPACE-URL-10051.app.github.dev:10051
# Hostname=codespace-agent-$(hostname)

# ü•ß RASPBERRY PI
# Par√¢metros espec√≠ficos para RPi (descomente se aplic√°vel):
# UserParameter=rpi.cpu.temp,vcgencmd measure_temp 2>/dev/null | awk -F= '{print $2}' | sed 's/¬∞C//' || echo "0"
# UserParameter=rpi.gpu.temp,vcgencmd measure_temp 2>/dev/null | awk -F= '{print $2}' | sed 's/¬∞C//' || echo "0"
# UserParameter=rpi.cpu.freq,vcgencmd measure_clock arm 2>/dev/null | awk -F= '{print $2/1000000}' || echo "0"

# üåê ROTEADORES (se suportarem SSH e agente)
# UserParameter=router.wan.ip,curl -s ifconfig.me || echo "unknown"
# UserParameter=router.uptime.days,uptime | awk '{print $3}' | sed 's/,//' || echo "0"

# ===========================================
# INSTRU√á√ïES DE INSTALA√á√ÉO POR SISTEMA
# ===========================================

# üêß UBUNTU/DEBIAN/LINUX MINT (RECOMENDADO):
# 1. Instalar reposit√≥rio Zabbix:
#    wget https://repo.zabbix.com/zabbix/7.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest+ubuntu22.04_all.deb
#    sudo dpkg -i zabbix-release_latest+ubuntu22.04_all.deb
# 2. Atualizar reposit√≥rios e instalar:
#    sudo apt update && sudo apt install -y zabbix-agent2
# 3. Instalar depend√™ncias √∫teis:
#    sudo apt install -y lm-sensors speedtest-cli acpi hddtemp
# 4. Configurar sensores:
#    sudo sensors-detect
# 5. Copiar configura√ß√£o:
#    sudo cp zabbix_agent2.conf.example /etc/zabbix/zabbix_agent2.conf
# 6. Editar configura√ß√£o (IMPORTANTE):
#    sudo nano /etc/zabbix/zabbix_agent2.conf
# 7. Ajustar permiss√µes:
#    sudo chown zabbix:zabbix /etc/zabbix/zabbix_agent2.conf
#    sudo chmod 640 /etc/zabbix/zabbix_agent2.conf
# 8. Reiniciar servi√ßo:
#    sudo systemctl restart zabbix-agent2
# 9. Habilitar na inicializa√ß√£o:
#    sudo systemctl enable zabbix-agent2
# 10. Verificar status:
#    sudo systemctl status zabbix-agent2

# üî¥ CENTOS/RHEL/ROCKY/ALMA LINUX:
# 1. sudo rpm -Uvh https://repo.zabbix.com/zabbix/7.4/rhel/9/x86_64/zabbix-release-7.4-1.el9.noarch.rpm
# 2. sudo dnf clean all && sudo dnf install -y zabbix-agent2
# 3. sudo dnf install -y lm-sensors speedtest-cli
# 4. sudo cp zabbix_agent2.conf.example /etc/zabbix/zabbix_agent2.conf
# 5. sudo systemctl restart zabbix-agent2 && sudo systemctl enable zabbix-agent2

# üü¢ OPENSUSE/SLES:
# 1. sudo zypper ar https://repo.zabbix.com/zabbix/7.4/sles/15/x86_64/ zabbix
# 2. sudo zypper install -y zabbix-agent2
# 3. sudo cp zabbix_agent2.conf.example /etc/zabbix/zabbix_agent2.conf
# 4. sudo systemctl restart zabbix-agent2 && sudo systemctl enable zabbix-agent2

# üçé MACOS (via Homebrew):
# 1. brew install zabbix
# 2. cp zabbix_agent2.conf.example /opt/homebrew/etc/zabbix/zabbix_agent2.conf
# 3. brew services start zabbix-agent2

# ü™ü WINDOWS:
# 1. Baixe o MSI do site oficial: https://www.zabbix.com/download_agents
# 2. Instale executando como Administrador
# 3. Copie a configura√ß√£o para: C:\Program Files\Zabbix Agent 2\zabbix_agent2.conf
# 4. Configure os valores necess√°rios no arquivo
# 5. Execute: sc start "Zabbix Agent 2"

# ===========================================
# VERIFICA√á√ÉO E TROUBLESHOOTING
# ===========================================

# üîç VERIFICAR SE O AGENTE EST√Å FUNCIONANDO:
# sudo systemctl status zabbix-agent2
# sudo journalctl -u zabbix-agent2 -f

# üîç TESTAR CONECTIVIDADE COM O SERVIDOR:
# telnet 192.168.1.120 10051
# nc -zv 192.168.1.120 10051

# üîç TESTAR SE O AGENTE RESPONDE LOCALMENTE:
# zabbix_get -s localhost -k agent.ping
# zabbix_get -s localhost -k system.uname

# üîç VER LOGS EM TEMPO REAL:
# sudo tail -f /var/log/zabbix/zabbix_agent2.log

# üîç TESTAR ITENS PERSONALIZADOS:
# zabbix_get -s localhost -k "cpu.temperature"
# zabbix_get -s localhost -k "system.uptime.days"

# üîç VERIFICAR CONFIGURA√á√ÉO:
# sudo zabbix_agent2 -t agent.ping
# sudo zabbix_agent2 -T

# üîç TESTAR CONECTIVIDADE DE REDE:
# sudo ufw status (verificar firewall)
# ss -tuln | grep 10050 (verificar se porta est√° escutando)

# ===========================================
# CONFIGURA√á√ïES ADICIONAIS DE SEGURAN√áA
# ===========================================

# üîí FIREWALL (Ubuntu/Debian):
# sudo ufw allow from 192.168.1.120 to any port 10050
# sudo ufw enable

# üîí FIREWALL (CentOS/RHEL):
# sudo firewall-cmd --permanent --add-rich-rule='rule family="ipv4" source address="192.168.1.120" port protocol="tcp" port="10050" accept'
# sudo firewall-cmd --reload

# üîí SELINUX (se habilitado):
# sudo setsebool -P zabbix_can_network on

# ===========================================
# NOTAS IMPORTANTES
# ===========================================
#
# üêß PODMAN vs DOCKER: Este arquivo est√° otimizado para Podman (rootless)
# üîí SEGURAN√áA: Configure firewall para permitir apenas o IP do servidor
# üìä PERFORMANCE: Use checks ativos (ServerActive) para melhor performance
# üîß HARDWARE: Instale lm-sensors para monitoramento de temperatura
# üì± MOBILE: Todos os par√¢metros funcionam via app mobile do Zabbix
# üåê REDE: Configure port forwarding no roteador se necess√°rio
#
# üìñ Documenta√ß√£o oficial: https://www.zabbix.com/documentation/current/manual/appendix/config/zabbix_agent2
# üè† Projeto: https://github.com/seu-usuario/zabbix-home-monitoring
